{"version":3,"file":"index.js","sources":["../src/calendar.tools.js","../src/components/ArrowBtn.js","../src/components/DateNodes.js","../src/components/TextWindow.js","../src/components/WeekDayNodes.js","../src/Calendar.js","../src/calendar.colors.js"],"sourcesContent":["export const fillCalendar = (month, year) => {\n  if (typeof month !== \"number\" || typeof year !== \"number\") { throw new Error(\"fillCalendar only accepts parameters of Type Number\") }\n  if (month < 0 || month > 11) { throw new Error(\"Invalid month index: Try [0-11]\") }\n  let datesArray = []\n  let monthStart = new Date(year,month,1).getDay()\n  let yearType = false;\n  let filledNodes = 0;\n  // Check for leap year\n  (year%4 === 0) ? \n    (year%100 === 0) ?\n      (year%400) ? yearType = true : yearType = false : \n    yearType = true : \n  yearType = false\n  const monthArrays = yearType ? [31,29,31,30,31,30,31,31,30,31,30,31] : [31,28,31,30,31,30,31,31,30,31,30,31]\n  if (month === 0) { month = 12; }\n  let leadDayStart = monthArrays[month-1] - monthStart + 1\n  // Loop out lead date numbers\n  for (let i = 0; i < monthStart; i++) {\n    datesArray.push({date: leadDayStart, type: \"leadDate\", id: \"leadDate\" + i})\n    leadDayStart++\n    filledNodes++\n  }\n  if (month === 12) { month = 0; }\n  // Loop out month's date numbers\n  for (let i = 0; i < monthArrays[month]; i++) {\n    datesArray.push({date: i + 1, type: \"monthDate\", id: \"monthDate\" + i})\n    filledNodes++\n  }\n  // fill the empty remaining cells in the calendar\n  let remainingNodes = 42 - filledNodes;\n  for (let i = 0; i < remainingNodes; i++) {\n    datesArray.push({date: i + 1, type: \"postDate\", id: \"postDate\" + i})\n  }\n  return datesArray\n}\n\nexport const route = (number, boolean) => {\n  if (boolean) {\n    switch (number) {\n      case 1: return 4\n      case 2: return 3\n      case 3: return 2\n      case 4: return 1\n      default: return number + 1\n    }\n  }\n  return number + 1\n}","import React from 'react';\n\nfunction ArrowBtn(props) {\n  return (\n    <div id={props.id} onClick={props.eventHandler} style={{background: props.colors.arrowsBG}}>\n      <svg xmlns=\"http://www.w3.org/2000/svg\" id=\"arrowBtn\" viewBox=\"0 0 6.3 4\" style={{fill: props.colors.svgFill}}>\n        <g id=\"Layer_2\" data-name=\"Layer 2\">\n          <polygon points=\"0 1.5 5 1.5 4 0 5 0 6.3 2 5 4 4 4 5 2.5 0 2.5 0 1.5\"/>\n        </g>\n      </svg>\n    </div>\n  )\n}\n\nexport default ArrowBtn","import React from 'react';\n\nfunction DateNodes(props) {\n  const cDate = new Date()\n  const dateNodes = props.datesArray.map(date => {\n    if (date.type === \"leadDate\") {\n      return (\n        <div\n          className=\"dateNode\" \n          key={date.id} \n          style={{background: props.colors.prevMonthNodesBG}}\n        >\n          <span>{date.date}</span>\n        </div>\n      )\n    }\n    if (date.date === cDate.getDate() && props.monthIsOffset !== true && date.type === \"monthDate\") {\n      return (\n        <div\n          className=\"dateNode\"\n          key={date.id}\n          style={{background: props.colors.currentDateNodeBG}}\n        >\n          <span>{date.date}</span>\n        </div>\n      )\n    }\n    if (date.type === \"postDate\") {\n      return (\n        <div \n          className=\"dateNode\" \n          key={date.id} \n          style={{background: props.colors.nextMonthNodesBG}}\n        >\n          <span>{date.date}</span>\n        </div>\n      )\n    }\n    return (\n      <div \n        className=\"dateNode\" \n        key={date.id}\n        style={{background: props.colors.currentMonthNodesBG}}\n      >\n        <span>{date.date}</span>\n      </div>\n    )\n  })\n  return (\n    <div className=\"d-numbers\">\n      {dateNodes}\n    </div>\n  )\n}\n\nexport default DateNodes;","import React from 'react'\n\nfunction TextWindow(props) {\n  return (\n    <React.Fragment>\n      <div className=\"c-header\" style={{background: props.header1BG}}>\n        <span>{new Date().toDateString()}</span>\n      </div>\n      <div className=\"c-header2\" style={{background: props.header2BG}}>\n        <div className=\"container-3d\">\n          <div className=\"box-3d\" style={{ transform: \"rotateY(\"+props.rotateY+\"deg)\" }}>\n            <div id=\"front\" style={{background: props.header2BG}}>{props.monthGroup[0]}</div>\n            <div id=\"right\" style={{background: props.header2BG}}>{props.monthGroup[1]}</div>\n            <div id=\"back\" style={{background: props.header2BG}}>{props.monthGroup[2]}</div>\n            <div id=\"left\" style={{background: props.header2BG}}>{props.monthGroup[3]}</div>\n          </div>\n        </div>\n      </div>\n    </React.Fragment>\n  )\n}\n\nexport default TextWindow","import React from 'react'\n\nfunction WeekDayNodes(props) {\n  const weekDayNames = [\"Sun\",\"Mon\",\"Tue\",\"Wed\",\"Thu\",\"Fri\",\"Sat\"]\n  const weekDayNodes = weekDayNames.map(node => {\n    return (\n      <div style={{borderRight: \"2px solid\" + props.border}}>\n        <span>{node}</span>\n      </div>\n    )\n  })\n  return weekDayNodes\n}\n\nexport default WeekDayNodes","import React, { Component } from 'react';\nimport { fillCalendar, route } from './calendar.tools'\nimport ArrowBtn from './components/ArrowBtn'\nimport DateNodes from './components/DateNodes'\nimport TextWindow from './components/TextWindow'\nimport WeekDayNodes from './components/WeekDayNodes';\n\nconst monthNames = [\"Jan \", \"Feb \", \"Mar \", \"Apr \", \"May \", \"Jun \", \"Jul \", \"Aug \", \"Sept \", \"Oct \", \"Nov \", \"Dec \"]\n\nclass Calendar extends Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      monthIsOffset: false,\n      monthOffset: props.date.getMonth(),\n      yearOffset: props.date.getFullYear(),\n      datesArray: fillCalendar(props.date.getMonth(), props.date.getFullYear()),\n      rotateY: 0,\n      itorator: 0,\n      rightBtn: false,\n      leftBtn: false,\n      monthGroup: [monthNames[props.date.getMonth()] + props.date.getFullYear(), undefined, undefined, undefined]\n    }\n    this.handleMonthChange = this.handleMonthChange.bind(this)\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    const { yearOffset, monthOffset } = this.state\n    if (this.state.monthOffset !== prevState.monthOffset) {\n      this.setState({ datesArray: fillCalendar(monthOffset, yearOffset) })\n    }\n  }\n\n  handleMonthChange(e) {\n    const { monthOffset, yearOffset, rotateY, itorator, rightBtn, leftBtn } = this.state\n    const cMonth = this.props.date.getMonth();\n    const cYear = this.props.date.getFullYear();\n    const nextMonthValues = {\n      nextYear: {\n        monthOffset: 0,\n        yearOffset: yearOffset + 1,\n        rotateY: rotateY - 90,\n        itorator: route(itorator, leftBtn)\n      },\n      currentYear: {\n        monthOffset: monthOffset + 1,\n        rotateY: rotateY - 90,\n        itorator: route(itorator, leftBtn)\n      }\n    }\n    const prevMonthValues = {\n      prevYear: {\n        monthOffset: 11,\n        yearOffset: yearOffset - 1,\n        rotateY: rotateY + 90,\n        itorator: route(itorator, rightBtn)\n      },\n      currentYear: {\n        monthOffset: monthOffset - 1,\n        rotateY: rotateY + 90,\n        itorator: route(itorator, rightBtn)\n      }\n    }\n    if (e.currentTarget.id === \"right-arrow\") {\n      this.setState(( monthOffset === 11 ) ? nextMonthValues.nextYear : nextMonthValues.currentYear, () => {\n        const { monthOffset, yearOffset, itorator } = this.state\n        this.setState({ monthIsOffset: ( monthOffset === cMonth && yearOffset === cYear ) ? false : true })\n        this.setState({rightBtn: true, leftBtn: false})\n        this.setState(\n          (itorator === 1) ? prevState => ({ monthGroup: [prevState.monthGroup[0], monthNames[monthOffset] + yearOffset, undefined, undefined] }) :\n          (itorator === 2) ? prevState => ({ monthGroup: [undefined, prevState.monthGroup[1], monthNames[monthOffset] + yearOffset, undefined] }) :\n          (itorator === 3) ? prevState => ({ monthGroup: [undefined, undefined, prevState.monthGroup[2], monthNames[monthOffset] + yearOffset] }) :\n          (itorator === 4) ? prevState => ({ monthGroup: [monthNames[monthOffset] + yearOffset, undefined, undefined, prevState.monthGroup[3]], itorator: 0 }) : void 0\n        )\n      })\n    } else {\n      this.setState(( monthOffset === 0 ) ? prevMonthValues.prevYear : prevMonthValues.currentYear, () => {\n        const { monthOffset, yearOffset, itorator } = this.state\n        this.setState({ monthIsOffset: ( monthOffset === cMonth && yearOffset === cYear ) ? false : true })\n        this.setState({rightBtn: false, leftBtn: true})\n        this.setState(\n          (itorator === 1) ? prevState => ({ monthGroup: [prevState.monthGroup[0], undefined, undefined, monthNames[monthOffset] + yearOffset] }) :\n          (itorator === 2) ? prevState => ({ monthGroup: [undefined, undefined, monthNames[monthOffset] + yearOffset, prevState.monthGroup[3]] }) :\n          (itorator === 3) ? prevState => ({ monthGroup: [undefined, monthNames[monthOffset] + yearOffset, prevState.monthGroup[2], undefined] }) :\n          (itorator === 4) ? prevState => ({ monthGroup: [monthNames[monthOffset] + yearOffset, prevState.monthGroup[1], undefined, undefined], itorator: 0 }) : void 0\n        )\n      })\n    }\n  }\n\n  render() {\n    const { datesArray, monthIsOffset, rotateY, monthGroup, monthOffset } = this.state\n    const { date, monthNames, colors } = this.props\n    return (\n      <div className=\"calendar\" style={{background: colors.componentBG, color: colors.textColor}}>\n        <div className=\"ui\">\n          <TextWindow\n            monthGroup={monthGroup}\n            rotateY={rotateY} \n            monthOffset={monthOffset} \n            cMonth={date.getMonth()}\n            monthNames={monthNames}\n            header1BG={colors.header1BG}\n            header2BG={colors.header2BG}\n           />\n          <div className=\"arrow-btns\">\n            <ArrowBtn id={\"left-arrow\"} eventHandler={this.handleMonthChange} colors={{arrowsBG: colors.arrowsBG, svgFill: colors.textColor}} />\n            <ArrowBtn id={\"right-arrow\"} eventHandler={this.handleMonthChange} colors={{arrowsBG: colors.arrowsBG, svgFill: colors.textColor}} />\n          </div>\n        </div>\n        <div className=\"display\">\n          <div className=\"d-wkDays\" id=\"wkDays\" style={{background: colors.weekDayNamesBG}}>\n            <WeekDayNodes border={colors.componentBG} />\n          </div>\n          <DateNodes\n            datesArray={datesArray} \n            monthIsOffset={monthIsOffset} \n            colors={{\n              prevMonthNodesBG: colors.prevMonthNodesBG,\n              currentDateNodeBG: colors.currentDateNodeBG,\n              currentMonthNodesBG: colors.currentMonthNodesBG,\n              nextMonthNodesBG: colors.nextMonthNodesBG\n            }}\n          />\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Calendar","const colorTheme = {\n  redflat: {\n    textColor: \"#fff\",\n    componentBG: \"#383737\",\n    header1BG: \"#383737\",\n    header2BG: \"#383737\",\n    arrowsBG: \"#ff2b2b\",\n    weekDayNamesBG: \"#c4c1c1\",\n    prevMonthNodesBG: \"#ff2b2b\",\n    currentDateNodeBG: \"#747272\",\n    currentMonthNodesBG: \"#c4c1c1\",\n    nextMonthNodesBG: \"#ff2b2b\"\n  },\n  original: {\n    textColor: \"#000\",\n    componentBG: \"#292828\",\n    header1BG: \"#fff\",\n    header2BG: \"#fff\",\n    arrowsBG: \"#fff\",\n    weekDayNamesBG: \"#fff\",\n    prevMonthNodesBG: \"#8ee5ff\",\n    currentDateNodeBG: \"#c4c1c1\",\n    currentMonthNodesBG: \"#fff\",\n    nextMonthNodesBG: \"#8ee5ff\"\n  }\n}\n\nexport default colorTheme"],"names":["fillCalendar","month","year","Error","datesArray","monthStart","Date","getDay","yearType","filledNodes","monthArrays","leadDayStart","i","push","date","type","id","remainingNodes","route","number","boolean","ArrowBtn","props","React","eventHandler","background","colors","arrowsBG","fill","svgFill","DateNodes","cDate","dateNodes","map","prevMonthNodesBG","getDate","monthIsOffset","currentDateNodeBG","nextMonthNodesBG","currentMonthNodesBG","TextWindow","header1BG","toDateString","header2BG","transform","rotateY","monthGroup","WeekDayNodes","weekDayNames","weekDayNodes","borderRight","border","monthNames","Calendar","state","getMonth","getFullYear","undefined","handleMonthChange","bind","prevProps","prevState","yearOffset","monthOffset","setState","e","itorator","rightBtn","leftBtn","cMonth","cYear","nextMonthValues","prevMonthValues","currentTarget","nextYear","currentYear","prevYear","componentBG","color","textColor","weekDayNamesBG","Component","colorTheme"],"mappings":"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"}